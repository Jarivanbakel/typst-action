name: 'Compile Typst documents'
description: 'GitHub Action to compile Typst documents'
inputs:
  filenames:
    description: 'Define the filenames for the compiled typst documents'
    required: true
runs:
  using: "composite"
  steps:
    - name: Determine OS
      shell: bash
      id: determine_os
      run: |
        if [ "$RUNNER_OS" == 'Linux' ]; 
        then
             binary_type="unknown-linux-gnu"
             archive_extension=".tar.gz"
        elif [ "$RUNNER_OS" == 'Windows' ]; 
        then
             binary_type="pc-windows-msvc"
             archive_extension=".zip"
        else 
             binary_type="apple-darwin"
             archive_extension=".tar.gz"
        fi
        
        echo "binary_type=$binary_type" >> $GITHUB_OUTPUT
        echo "archive_extension=$archive_extension" >> $GITHUB_OUTPUT
        
    - name: get download url for corresponding binary
      shell: bash
      id: download_url
      run: |
        binary_download_url=$(curl 'https://api.github.com/repos/typst/typst/releases/latest' | jq -n '[ .assets[] | select( .name | contains("${{ steps.determine_os.outputs.binary_type }}")) | .browser_download_url]')
        echo "binary_download_url=$binary_download_url" >> $GITHUB_OUTPUT
        echo $binary_download_url

    - name: Download the binary
      shell: bash
      run: curl -OL ${{ steps.download_url.outputs.binary_download_url }}
    
    - name: Extract the binary
      shell: bash
      run: |
        echo Running on $RUNNER_OS extracting $binary_type$archive_extension

        if [ "$RUNNER_OS" == 'Windows' ]; 
        then
            7z x "typst-x86_64-${{ steps.determine_os.outputs.binary_type }}${{ steps.determine_os.outputs.archive_extension }}"
        else
            tar zxvf "typst-x86_64-${{ steps.determine_os.outputs.binary_type }}${{ steps.determine_os.outputs.archive_extension }}"
        fi
        
    - name: Compile Typst documents
      shell: bash
      run: |
        paths="${{ inputs.filenames }}"
        paths=${paths//$'\n'/}
        echo Paths $paths
        
        for file in ${paths[@]}; do
          ./typst-x86_64-${{ steps.determine_os.outputs.binary_type }}/typst compile $file
        done
